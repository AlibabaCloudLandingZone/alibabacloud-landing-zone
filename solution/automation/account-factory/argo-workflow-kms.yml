apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  namespace: argo
  generateName: terraform-workflow-
  annotations:
    workflows.argoproj.io/version: ">= 3.1.0"
spec:
  entrypoint: terraform-workflow
  arguments:
    parameters:
    - name: alicloud_secret_name
      value: "yourSecretName"

    - name: azure_secret_name
      value: "yourSecretName"

    - name: kms_aap_client_key_pwd
      value: "yourPassWord"

    - name: region
      value: "yourRegion"

    - name: uid
      value: "yourMasterAccountUid"

    - name: account_name
      value: "yourAccountName"

    - name: account_name_prefix
      value: "yourAccountNamePrefix"

    - name: folder_id
      value: "yourFolderId"

    - name: vpc_cidr_block
      value: "yourVpcCIDR"

    - name: switch_cidr_block
      value: "yourVpcCIDR"

    - name: zone_id
      value: "yourZoneId"

  templates:
  - name: terraform-workflow
    steps:

    # 环境准备
    - - name: env-prepare
        template: git-clone-init
        arguments:
          parameters:
            - name: cmd
              value: 'pwd && ls -al'

    # 创建账号
    - - name: account-create
        template: execute-func
        arguments:
          parameters:
            - name: cmd
              value: '
              cd extension 
              && python kms_secret.py {{workflow.parameters.alicloud_secret_name}} {{workflow.parameters.azure_secret_name}} env_temp
              && source env_temp && rm -rf env_temp && cd ..
              && cd step/account-create 
              && terraform init -backend-config="key={{workflow.parameters.uid}}-{{workflow.parameters.account_name}}-account-create"
                 -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins
              && terraform apply --auto-approve -var "folder_id={{workflow.parameters.folder_id}}"
                 -var "account_name={{workflow.parameters.account_name}}" -var "account_name_prefix={{workflow.parameters.account_name_prefix}}"
              '

    # 权限配置:创建IDP
    - - name: auth-create-idp
        template: execute-func
        arguments:
          parameters:
            - name: cmd
              value: '
              cd extension 
              && python kms_secret.py {{workflow.parameters.alicloud_secret_name}} {{workflow.parameters.azure_secret_name}} env_temp
              && source env_temp && rm -rf env_temp && cd ..
              && cd step/auth-create-idp
              && terraform init -backend-config="key={{workflow.parameters.uid}}-{{workflow.parameters.account_name}}-auth-create-idp"
                 -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins
              && terraform apply --auto-approve -var-file=../../settings.tfvars -compact-warnings
              '

    # 权限配置:创建角色
    - - name: auth-create-role
        template: execute-func
        arguments:
          parameters:
            - name: cmd
              value: '
              cd extension 
              && python kms_secret.py {{workflow.parameters.alicloud_secret_name}} {{workflow.parameters.azure_secret_name}} env_temp
              && source env_temp && rm -rf env_temp && cd ..
              && cd step/auth-create-role
              && terraform init -backend-config="key={{workflow.parameters.uid}}-{{workflow.parameters.account_name}}-auth-create-role"
                 -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins
              && terraform apply --auto-approve -var-file=../../settings.tfvars -compact-warnings
              '

    # 权限配置:创建TF用户
    - - name: auth-create-user
        template: execute-func
        arguments:
          parameters:
            - name: cmd
              value: '
              cd extension 
              && python kms_secret.py {{workflow.parameters.alicloud_secret_name}} {{workflow.parameters.azure_secret_name}} env_temp
              && source env_temp && rm -rf env_temp && cd ..
              && cd step/auth-create-user
              && terraform init -backend-config="key={{workflow.parameters.uid}}-{{workflow.parameters.account_name}}-auth-create-user"
                 -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins
              && terraform apply --auto-approve -var-file=../../settings.tfvars -compact-warnings
              '

    # 权限配置:角色授权
    - - name: auth-authorize-role
        template: execute-func
        arguments:
          parameters:
            - name: cmd
              value:  '
              cd extension 
              && python kms_secret.py {{workflow.parameters.alicloud_secret_name}} {{workflow.parameters.azure_secret_name}} env_temp
              && source env_temp && rm -rf env_temp && cd ..
              && cd step/auth-authorize-role
              && terraform init -backend-config="key={{workflow.parameters.uid}}-{{workflow.parameters.account_name}}-auth-authorize-role"
                 -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins
              && terraform apply --auto-approve -var-file=../../settings.tfvars -compact-warnings
              '

    # 网络配置
    - - name: network-configure
        template: execute-func
        arguments:
          parameters:
            - name: cmd
              value: '
              cd extension 
              && python kms_secret.py {{workflow.parameters.alicloud_secret_name}} {{workflow.parameters.azure_secret_name}} env_temp
              && source env_temp && rm -rf env_temp && cd ..
              && cd step/network-create-vpc-vsw
              && terraform init -backend-config="key={{workflow.parameters.uid}}-{{workflow.parameters.account_name}}-network-create-vpc-vsw"
                 -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins
              && terraform apply --auto-approve -compact-warnings -var "vpc_cidr_block={{workflow.parameters.vpc_cidr_block}}"
                 -var "switch_cidr_block={{workflow.parameters.switch_cidr_block}}" -var "zone_id={{workflow.parameters.zone_id}}"
                 -var-file=../../settings.tfvars
              '

  - name: execute-func
    inputs:
      parameters:
      - name: cmd
    container:
      image: acr-hangzhou-1-registry.cn-hangzhou.cr.aliyuncs.com/terraform/terraform:v9
      volumeMounts:
        - name: pvc-nas-1
          mountPath: "/nas" # NAS挂载路径
      command: ["/bin/sh", "-c"]
      args: ["{{inputs.parameters.cmd}}"]
      workingDir: /nas/tf-dir-{{workflow.name}}
      env:
      - name: ALICLOUD_REGION
        value: "{{workflow.parameters.region}}"
      - name: KMS_AAP_CLIENT_KEY_PWD
        value: "{{workflow.parameters.kms_aap_client_key_pwd}}"
    volumes:
      - name: pvc-nas-1
        persistentVolumeClaim:
          claimName: pvc-nas-1  # NAS PVC


  - name: git-clone-init
    inputs:
      parameters:
      - name: cmd
      artifacts:
      - name: terraform-source
        path: /nas/tf-dir-{{workflow.name}}
        git:
          repo: https://codeup.aliyun.com/xxxx/account-base.git # when authenticating via basic auth
#          repo: git@codeup.aliyun.com:xxxx/account-base.git     # when authenticating via sshPrivateKeySecret
          revision: "azure-backend-update"
          usernameSecret:               # when authenticating via basic auth
            name: git-terraform-creds
            key: username
          passwordSecret:               # when authenticating via basic auth
            name: git-terraform-creds
            key: password
#          sshPrivateKeySecret:          # when authenticating via sshPrivateKeySecret
#            name: git-terraform-creds
#            key: ssh-private-key
#          insecureIgnoreHostKey: true   # when authenticating via sshPrivateKeySecret
          depth: 1
    container:
      image: acr-hangzhou-1-registry.cn-hangzhou.cr.aliyuncs.com/terraform/terraform:v9
      volumeMounts:
        - name: pvc-nas-1
          mountPath: "/nas"
      command: ["/bin/sh", "-c"]
      args: ["{{inputs.parameters.cmd}}"]
      workingDir: /nas/tf-dir-{{workflow.name}}
    volumes:
      - name: pvc-nas-1
        persistentVolumeClaim:
          claimName: pvc-nas-1
