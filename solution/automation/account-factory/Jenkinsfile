pipeline {
    agent {
        docker {
            image 'registry.cn-hangzhou.aliyuncs.com/terraform/terraform-docker-hub:v1'
            args '-e ALICLOUD_ACCESS_KEY=$access_key -e ALICLOUD_SECRET_KEY=$secret_key -e ALICLOUD_REGION=$region'
        }
    }
    stages {
        stage('环境准备'){
            steps{
                git credentialsId: 'yf01-aliyun-code-repo', url: 'git@codeup.aliyun.com:xxxx/account-base.git'
            }
        }
        stage('创建账号') {
            steps{
                sh 'cd step/account-create && terraform init -backend-config="key=$uid-$account_name-account-create" -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins'
                sh 'cd step/account-create && terraform apply --auto-approve -var "folder_id=$folder_id" -var "account_name=$account_name" -var "account_name_prefix=$account_name_prefix"'
            }
        }
        stage('权限配置:创建IDP') {
            steps{
                sh 'cd step/auth-create-idp && terraform init -backend-config="key=$uid-$account_name-auth-create-idp" -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins'
                sh 'cd step/auth-create-idp && terraform apply --auto-approve -var-file=../../settings.tfvars -compact-warnings'
            }
        }
        stage('权限配置:创建角色') {
            steps{
                sh 'cd step/auth-create-role && terraform init -backend-config="key=$uid-$account_name-auth-create-role" -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins'
                sh 'cd step/auth-create-role && terraform apply --auto-approve -var-file=../../settings.tfvars -compact-warnings'
            }
        }
        stage('权限配置:创建TF用户') {
            steps{
                sh 'cd step/auth-create-user && terraform init -backend-config="key=$uid-$account_name-auth-create-user" -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins'
                sh 'cd step/auth-create-user && terraform apply --auto-approve -var-file=../../settings.tfvars -compact-warnings'
            }
        }
        stage('权限配置:角色授权') {
            steps{
                sh 'cd step/auth-authorize-role && terraform init -backend-config="key=$uid-$account_name-auth-authorize-role" -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins'
                sh 'cd step/auth-authorize-role && terraform apply --auto-approve -var-file=../../settings.tfvars -compact-warnings'
            }
        }
        stage('网络配置') {
            steps{
                sh 'cd step/network-create-vpc-vsw && terraform init -backend-config="key=$uid-$account_name-network-create-vpc-vsw" -backend-config=../../backend.tfvars -reconfigure -plugin-dir=/srv/terraform-plugins'
                sh 'cd step/network-create-vpc-vsw && terraform apply --auto-approve -compact-warnings -var "vpc_cidr_block=$vpc_cidr_block" -var "switch_cidr_block=$switch_cidr_block" -var "zone_id=$zone_id" -var-file=../../settings.tfvars'
            }
        }
    }

}
