# This is a basic workflow to help you get started with Actions
name: auto-account-factory-module-idp
env:
  ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
  ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}
  ALICLOUD_REGION: 'cn-hangzhou'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the xx path
  push:
    paths:
      # Modify according to the actual situation
      - 'solution/automation/account-factory/modules/idp/**'
      - '.github/workflows/auto-account-factory-module-idp.yml'
  pull_request:
    paths:
      # Modify according to the actual situation
      - 'solution/automation/account-factory/modules/idp/**'

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "terraform-module-ci"
  terraform-module-ci:
    # The type of runner that the job will run on
#    runs-on: self-hosted
    runs-on: ubuntu-latest

    # Modify according to the actual situation
    environment: yunguotest1_MA_1140931609457592

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Step 1
      - name: Run the complete example
        shell: bash
        # Modify according to the actual situation
        run: |
          pwd && ls -al
          cd solution/automation/account-factory/modules/idp/examples/complete

          terraform init \
            -backend-config="key=1140931609457592-yunxiao2-auth-create-idp" \
            -backend-config="bucket=bucket-with-terraform-state1" \
            -backend-config="prefix=path/mystate" \
            -backend-config="region=cn-hangzhou" \
            -backend-config="endpoint=oss-cn-hangzhou.aliyuncs.com" \
            -backend-config="tablestore_endpoint=https://terraform-hz-1.cn-hangzhou.ots.aliyuncs.com" \
            -backend-config="tablestore_table=statelock"
          
          terraform plan
          terraform apply --auto-approve
          terraform plan -destroy
          terraform apply -destroy --auto-approve

      # Step 2
      - name: Run example scenario-other-1
        shell: bash
        # Modify according to the actual situation
        run: |
          pwd && ls -al
          cd solution/automation/account-factory/modules/idp/examples/scenario-other-1
          terraform init \
            -backend-config="key=1140931609457592-yunxiao2-auth-create-idp" \
            -backend-config="bucket=bucket-with-terraform-state1" \
            -backend-config="prefix=path/mystate" \
            -backend-config="region=cn-hangzhou" \
            -backend-config="endpoint=oss-cn-hangzhou.aliyuncs.com" \
            -backend-config="tablestore_endpoint=https://terraform-hz-1.cn-hangzhou.ots.aliyuncs.com" \
            -backend-config="tablestore_table=statelock"
          
          terraform plan
          terraform apply --auto-approve
